{"version":3,"sources":["components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","year","Date","getFullYear","DataFetching","lazy","useStyles","makeStyles","theme","root","display","marginLeft","textAlign","App","useState","title","content","postSearch","setPostSearch","classes","dynaSearch","event","target","name","value","prevPostSearch","console","log","className","style","fontSize","color","type","placeholder","onChange","onTouchEnd","fallback","CircularProgress","search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4MAOeA,MALf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OAAO,sEAAoCF,M,iCCEvCG,EAAeC,gBAAK,kBAAM,uDAE1BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,WAAY,QAEZ,YAAa,CAEXC,UAAW,SACXD,WAAY,YA+DHE,MA1Df,WAAgB,IAAD,EACuBC,mBAAS,CAC3CC,MAAO,GACPC,QAAS,KAHE,mBACNC,EADM,KACMC,EADN,KAKPC,EAAUb,IAEhB,SAASc,EAAWC,GAAQ,IAAD,EACDA,EAAMC,OAAtBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MAEdN,GAAc,SAACO,GAGb,OAFAC,QAAQC,IAAIF,GAEL,2BACFA,GADL,kBAEGF,EAAOC,OAKd,OACE,sBAAKI,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,+BACG,IACD,cAAC,IAAD,CAAmBC,MAAO,CAAEC,SAAU,GAAIC,MAAO,aAFnD,iBAKA,+BACE,uBACEH,UAAU,YACVJ,MAAOP,EAAWF,MAClBQ,KAAK,QACLS,KAAK,OACLC,YAAY,wCACZC,SAAUd,EACVe,WAAYf,SAIlB,cAAC,WAAD,CACEgB,SACE,qBAAKR,UAAWT,EAAQV,KAAxB,SACE,cAAC4B,EAAA,EAAD,CAAkBN,MAAM,gBAH9B,SAOE,qBAAKH,UAAU,OAAf,SACE,cAACxB,EAAD,CAAckC,OAAQrB,EAAWF,YAGrC,qBAAKa,UAAU,SAAf,SACE,cAAC,EAAD,UC7DOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2df88bc1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n  return <footer>Blake Marshall Copyright â“’ {year}</footer>;\r\n}\r\n\r\nexport default Footer;\r\n","/* eslint-disable */\r\nimport React, { useState, lazy, Suspense } from \"react\";\r\nimport Footer from \"./components/Footer\";\r\nimport PublicTwoToneIcon from \"@material-ui/icons/PublicTwoTone\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nconst DataFetching = lazy(() => import(\"./components/DataFetching\"));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    marginLeft: \"10rem\",\r\n\r\n    \"& > * + *\": {\r\n      // marginLeft: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      marginLeft: \"50%\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const [postSearch, setPostSearch] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  const classes = useStyles();\r\n\r\n  function dynaSearch(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setPostSearch((prevPostSearch) => {\r\n      console.log(prevPostSearch);\r\n\r\n      return {\r\n        ...prevPostSearch,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"banner\">\r\n        <h1>\r\n          {\" \"}\r\n          <PublicTwoToneIcon style={{ fontSize: 45, color: \"#4424d6\" }} />\r\n          Wiki Search\r\n        </h1>\r\n        <form>\r\n          <input\r\n            className=\"searchBar\"\r\n            value={postSearch.title}\r\n            name=\"title\"\r\n            type=\"text\"\r\n            placeholder=\"  Search for a Wiki ...  ðŸ”Ž\"\r\n            onChange={dynaSearch}\r\n            onTouchEnd={dynaSearch}\r\n          ></input>\r\n        </form>\r\n      </div>\r\n      <Suspense\r\n        fallback={\r\n          <div className={classes.root}>\r\n            <CircularProgress color=\"secondary\" />\r\n          </div>\r\n        }\r\n      >\r\n        <div className=\"post\">\r\n          <DataFetching search={postSearch.title} />\r\n        </div>\r\n      </Suspense>\r\n      <div className=\"footer\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}