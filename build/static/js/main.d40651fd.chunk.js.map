{"version":3,"sources":["components/Modal.jsx","components/DataFetching.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","overflow","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","maxWidth","maxHeight","TransitionsModal","props","classes","React","useState","open","setOpen","style","margin","color","borderRadius","height","width","fontWeight","type","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","postContent","substring","DataFetching","posts","setPosts","useEffect","axios","get","then","res","data","catch","err","filteredPosts","filter","post","index","title","toLowerCase","includes","search","console","log","map","src","image","alt","content","length","postID","_id","Footer","year","Date","getFullYear","App","postSearch","setPostSearch","dynaSearch","event","target","name","value","prevPostSearch","placeholder","onChange","onTouchEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d40651fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n// import ExpandButton from \"./ExpandButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"none\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxWidth: \"50%\",\r\n    maxHeight: \"75%\",\r\n    overflow: \"scroll\",\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{\r\n          margin: 1,\r\n          backgroundColor: \"#4424D6\",\r\n          color: \"#D4EDF7\",\r\n          borderRadius: 5,\r\n          height: \"2.5rem\",\r\n          width: \"6.5rem\",\r\n          fontWeight: 600,\r\n          border: 0,\r\n        }}\r\n        type=\"button\"\r\n        onClick={handleOpen}\r\n      >\r\n        ...Read More\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            {/* <h2 id=\"transition-modal-title\">Transition modal</h2> */}\r\n            {open ? (\r\n              <p id=\"transition-modal-description\">\r\n                {\"... \" + props.postContent.substring(70)}\r\n              </p>\r\n            ) : (\r\n              <p>{props.postContent.substring(0, 70) + \"...\"}</p>\r\n            )}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import ExpandButton from \"./ExpandButton\";\r\nimport Modal from \"./Modal\";\r\n\r\nfunction DataFetching(props) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://safe-cliffs-03637.herokuapp.com/articles\")\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setPosts(res.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n      });\r\n  }, []);\r\n  // console.log(\"searching...  \" + props.search);\r\n  // props.search = props.search.shift();\r\n  const filteredPosts = posts.filter((post, index) => {\r\n    return post.title.toLowerCase().includes(props.search.toLowerCase());\r\n  });\r\n\r\n  console.log(filteredPosts);\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <ul>\r\n          {filteredPosts.map((post, index) => (\r\n            <li className=\"posts\" key={post._id}>\r\n              <img\r\n                src={`https://safe-cliffs-03637.herokuapp.com/${post.image}`}\r\n                alt=\"postImage\"\r\n              ></img>\r\n              {props.title !== \"\" ? (\r\n                <p style={{ fontWeight: 800, color: \"#347B98\" }}>\r\n                  {post.title}{\" \"}\r\n                </p>\r\n              ) : null}\r\n              <br /> <hr></hr>\r\n              <p>{post.content.substring(0, 70) + \"...\"}</p>\r\n              {post.content.length > 70 ? (\r\n                <Modal postID={post._id} postContent={post.content} />\r\n              ) : null}\r\n            </li>\r\n          ))}\r\n\r\n          {/* <button>here</button> */}\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataFetching;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n  return <footer>Blake Marshall Copyright â“’ {year}</footer>;\r\n}\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport DataFetching from \"./components/DataFetching\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  const [postSearch, setPostSearch] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  function dynaSearch(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setPostSearch((prevPostSearch) => {\r\n      console.log(prevPostSearch);\r\n\r\n      return {\r\n        ...prevPostSearch,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  // const indexed = postSearch.filter((posts, index) => {\r\n  //   return posts;\r\n  // });\r\n  // console.log(indexed);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"banner\">\r\n        <h1>ðŸŒŽ RESTful Wiki Search</h1>\r\n\r\n        <form>\r\n          <input\r\n            style={{\r\n              margin: \"1rem 0rem 1rem 0rem\",\r\n              border: 0,\r\n              height: \"3rem\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            value={postSearch.title}\r\n            name=\"title\"\r\n            type=\"text\"\r\n            placeholder=\"  Search for a Wiki ...  ðŸ”Ž\"\r\n            onChange={dynaSearch}\r\n            onTouchEnd={dynaSearch}\r\n          ></input>\r\n        </form>\r\n        <hr></hr>\r\n      </div>\r\n\r\n      <div className=\"post\">\r\n        <DataFetching search={postSearch.title} />\r\n      </div>\r\n      <div className=\"footer\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}